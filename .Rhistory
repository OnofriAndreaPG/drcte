library(readxl)
dataset <- read_xlsx(file.choose(), sheet = 1)
dataset <- mutate(dataset,
timeAf = as.numeric(timeAf),
curveCode = factor(factor(temp):factor(water)))
dataset <- subset(dataset, temp < 40 & temp > 4)
library(tidyverse)
library(drcSeedGerm)
dataset <- read_xlsx(file.choose(), sheet = 1)
dataset <- mutate(dataset,
timeAf = as.numeric(timeAf),
curveCode = factor(factor(temp):factor(water)))
dataset <- subset(dataset, temp < 40 & temp > 4)
modHTT <- drmte(nSeeds ~ timeBef + timeAf + water + temp,
data = dataset,
fct = HTTLL(),
start=c(150, 4, -1.1, 0.26, 2, 0.34))
devtools::load_all()
modHTT <- drmte(nSeeds ~ timeBef + timeAf + water + temp,
data = dataset,
fct = HTTLL(),
start=c(150, 4, -1.1, 0.26, 2, 0.34))
tab <- plotData(modHTT)
ggplot() +
geom_point(data = tab$plotPoints,
mapping = aes(x = timeAf, y = CDF),
col = "red") +
geom_line(data = tab$plotFits,
mapping = aes(x = timeAf, y = CDF)) +
facet_wrap(~ factor(temp):factor(water), ncol = 8) +
scale_x_continuous(name = "Time (d)") +
scale_y_continuous(name = "Cumulative proportion of germinated seeds")
# Curveid with an environmental covariate ##########
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
pmodels = c(~factor(temp) - 1, ~1, ~factor(temp) - 1,
~1))
summary(mod.ll2)
devtools::load_all()
tab <- plotData(mod.ll2) # Con curveid
ggplot() +
geom_point(data = tab$plotPoints,
mapping = aes(x = timeAf, y = CDF),
col = "red") +
geom_line(data = tab$plotFits,
mapping = aes(x = timeAf, y = CDF)) +
facet_wrap(~ factor(temp):factor(water), ncol = 8) +
scale_x_continuous(name = "Time (d)") +
scale_y_continuous(name = "Cumulative proportion of germinated seeds")
# With separate fitting
devtools::load_all()
mod1 <- drmte(nSeeds ~ timeBef + timeAf, data = verbascum,
curveid = Species, fct = loglogistic(),
separate = T)
data(verbascum)
mod1 <- drmte(nSeeds ~ timeBef + timeAf, data = verbascum,
curveid = Species, fct = loglogistic(),
separate = T)
returnList <- by(data, factor(verbascum$Species),
function(g) drmte(nSeeds ~ timeBef + timeAf,
data = g,
fct = LL.3())
)
factor(verbascum$Species)
returnList <- by(verbascum, factor(verbascum$Species),
function(g) drmte(nSeeds ~ timeBef + timeAf,
data = g,
fct = LL.3())
)
returnList
# With separate fitting
devtools::load_all()
data(verbascum)
mod1 <- drmte(nSeeds ~ timeBef + timeAf, data = verbascum,
curveid = Species, fct = loglogistic(),
separate = T)
mod1 <- drmte(nSeeds ~ timeBef + timeAf, data = verbascum,
curveid = Species, fct = loglogistic(),
separate = T)
# With separate fitting
devtools::load_all()
mod1 <- drmte(nSeeds ~ timeBef + timeAf, data = verbascum,
curveid = Species, fct = loglogistic(),
separate = T)
# With separate fitting
devtools::load_all()
data(verbascum)
mod1 <- drmte(nSeeds ~ timeBef + timeAf, data = verbascum,
curveid = Species, fct = loglogistic(),
separate = T)
# With separate fitting
devtools::load_all()
data(verbascum)
mod1 <- drmte(nSeeds ~ timeBef + timeAf, data = verbascum,
curveid = Species, fct = loglogistic(),
separate = T)
# With separate fitting
devtools::load_all()
data(verbascum)
mod1 <- drmte(nSeeds ~ timeBef + timeAf, data = verbascum,
curveid = Species, fct = loglogistic(),
separate = T)
# With separate fitting
devtools::load_all()
data(verbascum)
mod1 <- drmte(nSeeds ~ timeBef + timeAf, data = verbascum,
curveid = Species, fct = loglogistic(),
separate = T)
?substitute
mod1 <- drmte(nSeeds ~ timeBef + timeAf, data = verbascum,
curveid = Species, fct = loglogistic(),
separate = T)
# With separate fitting
devtools::load_all()
data(verbascum)
mod1 <- drmte(nSeeds ~ timeBef + timeAf, data = verbascum,
curveid = Species, fct = loglogistic(),
separate = T)
mod1 <- drmte(nSeeds ~ timeBef + timeAf, data = verbascum,
curveid = Species, fct = loglogistic(),
separate = T)
# With separate fitting
devtools::load_all()
data(verbascum)
mod1 <- drmte(nSeeds ~ timeBef + timeAf, data = verbascum,
curveid = Species, fct = loglogistic(),
separate = T)
plot(mod1)
plotData(mod1)
summary(mod1)
# Curveid with an environmental covariate ##########
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
summary(mod.ll2)
# Curveid with an environmental covariate ##########
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
?any
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
mod.ll2
dataset <- read_xlsx(file.choose(), sheet = 1)
dataset <- mutate(dataset,
timeAf = as.numeric(timeAf),
curveCode = factor(factor(temp):factor(water)))
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
mod.ll2
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
mod.ll2
fitList <- mod.ll2
# This is a helper function, that takes a list of drcte objects
# and prepares a unique 'drcte' object to be returned.
lenList <- length(fitList)
oneFunction <- lenList==1
uniCur <- names(fitList)
numCur <- lenList
numPar <- as.numeric(sapply(fitList, function(el) length(coef(el))))
lapply(fitList, class)
vapply(fitList, class)
sapply(fitList, class)
unlist(lapply(fitList, class))
unlist(lapply(fitList, function(el) class(el)[1]))
unlist(lapply(fitList, function(el) class(el)[1])) == "character"
unlist(lapply(fitList, function(el) class(el)[1])) != "character"
sel <- unlist(lapply(fitList, function(el) class(el)[1])) != "character"
sel
fitList[sel]
fitList <- fitList[sel]
numPar <- as.numeric(sapply(fitList, function(el) length(coef(el))))
retList <- list()
# data matrix
dataMat <- lapply(fitList, function(el) el$"data") # Da verificare
dataMat <- do.call(rbind, dataMat)
tmp <- mapply(function(i) rep(names(fitList)[i], length(fitList[[i]]$data$curveid)), 1:numCur, SIMPLIFY = F)
dataMat$orig.curveid <- do.call(c, tmp)
tmp <- mapply(function(i) rep(i, length(fitList[[i]]$data$curveid)), 1:numCur, SIMPLIFY = F)
dataMat$curveid <- do.call(c, tmp)
retList$"data" <- dataMat
# data matrix
dataMat <- lapply(fitList, function(el) el$"data") # Da verificare
dataMat <- do.call(rbind, dataMat)
tmp <- mapply(function(i) rep(names(fitList)[i], length(fitList[[i]]$data$curveid)), 1:numCur, SIMPLIFY = F)
# This is a helper function, that takes a list of drcte objects
# and prepares a unique 'drcte' object to be returned.
sel <- unlist(lapply(fitList, function(el) class(el)[1])) != "character"
fitList <- fitList[sel]
lenList <- length(fitList)
oneFunction <- lenList==1
uniCur <- names(fitList)
numCur <- lenList
numPar <- as.numeric(sapply(fitList, function(el) length(coef(el))))
retList <- list()
# data matrix
dataMat <- lapply(fitList, function(el) el$"data") # Da verificare
dataMat <- do.call(rbind, dataMat)
tmp <- mapply(function(i) rep(names(fitList)[i], length(fitList[[i]]$data$curveid)), 1:numCur, SIMPLIFY = F)
dataMat$orig.curveid <- do.call(c, tmp)
tmp <- mapply(function(i) rep(i, length(fitList[[i]]$data$curveid)), 1:numCur, SIMPLIFY = F)
dataMat$curveid <- do.call(c, tmp)
retList$"data" <- dataMat
# Parameter names
pnList <- lapply(fitList, function(el) el$"parNames")
npVec <- as.vector(unlist(lapply(pnList, function(x){x[[2]]})))
idVec <- rep(uniCur, numPar)
aVec <- paste(npVec, idVec, sep = ":")
retList$"parNames" <- list(aVec, npVec, idVec)
# dataList
tdataList <- lapply(fitList, function(el) el$"dataList"$dose)
retList$"dataList"$dose <- as.numeric(do.call(c, tdataList))
tdataList <- lapply(fitList, function(el) el$"dataList"$origResp)
retList$"dataList"$origResp <- as.numeric(do.call(c, tdataList))
retList$"dataList"$weights <- NULL
tdataList <- lapply(fitList, function(el) el$"dataList"$curveid)
retList
retList$"dataList"
retList$"dataList"$dose
tdataList
retList$"dataList"$dose <- as.numeric(do.call(c, tdataList))
tdataList <- lapply(fitList, function(el) el$"dataList"$origResp)
retList$"dataList"$origResp <- as.numeric(do.call(c, tdataList))
retList$"dataList"$weights <- NULL
tdataList <- lapply(fitList, function(el) el$"dataList"$curveid)
tmp <- mapply(function(i) rep(i, length(tdataList[[i]])), 1:numCur, SIMPLIFY = F)
retList$"dataList"$curveid <- as.numeric(do.call(c, tmp))
retList$"dataList"$plotid <- as.numeric(do.call(c, tmp))
retList$"dataList"$resp <- retList$"dataList"$origResp
retList$"dataList"$names <- list()
retList$"dataList"$names$dName <- fitList[[1]]$dataList$names$dName
retList$"dataList"$names$orName <- fitList[[1]]$dataList$names$orName
retList$"dataList"$names$wName <- fitList[[1]]$dataList$names$wName
# print(uniCur)
retList$"dataList"$names$rNames <- uniCur
# To be completed
retList$"objVal" <- fitList
retList$"fit"$method <- "Parametric"
retList$"parmMat" <- NULL
plotFct <- function(x) {matrix(unlist(lapply(fitList, function(y)y$"curve"[[1]](x))), ncol = numCur)}
retList$"curve" <- list(plotFct, fitList[[1]]$"curve"[[2]])
coefVec <- as.vector(unlist(lapply(fitList, function(x){x$"fit"$"par"})))
names(coefVec) <- aVec
retList$"coefficients" <- coefVec
class(retList) <- c("drcteList", "drcte", "drc")
# Curveid with an environmental covariate ##########
devtools::load_all()
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
fitList
print(as.numeric(do.call(c, tdataList)))
# dataList
tdataList <- lapply(fitList, function(el) el$"dataList"$dose)
tdataList
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
# Curveid with an environmental covariate ##########
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
pmodels = c(~factor(temp) - 1, ~1, ~factor(temp) - 1,
~1))
mod.ll2$dataList$dose
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
summary(mod.ll2)
# Curveid with an environmental covariate ##########
devtools::load_all()
mod.ll2 <- drmte(nSeeds ~ timeBef + timeAf + water,
data = dataset,
fct = HTLL(),
curveid = temp,
separate = T)
summary(mod.ll2)
library(drcte)
